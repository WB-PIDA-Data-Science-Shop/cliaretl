% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_management_funs.R
\name{addnew_db_variables}
\alias{addnew_db_variables}
\title{Add New Rows to db_variables Metadata (with feedback)}
\usage{
addnew_db_variables(
  db_variables,
  new_rows,
  validate = TRUE,
  order_by = "variable"
)
}
\arguments{
\item{db_variables}{A data frame representing the existing metadata.}

\item{new_rows}{A data frame or tibble with the same column names
as `db_variables`, representing new entries to append.}

\item{validate}{Logical; if TRUE (default), checks that `new_rows`
columns match `db_variables` columns before binding.}

\item{order_by}{character; a variable name inside `db_variables` to
order the final output, default set to the `variable` column (as is
the existing norm)}
}
\value{
An updated `db_variables` data frame containing the new rows.
}
\description{
Appends new variable metadata rows to an existing `db_variables`
data frame after checking column compatibility and reports which
new unique values were introduced in each column.
}
\examples{
new_entries <- tibble::tibble(
  var_name = "New indicator example",
  api_id = NA_character_,
  variable = "bs_new_001",
  var_level = "indicator",
  family_var = "vars_newfamily",
  family_name = "New Family",
  family_order = 20,
  processing = NA_character_,
  description = "A newly added test indicator",
  description_short = "Short description",
  source = "Internal",
  benchmarked_ctf = "No",
  benchmark_static_family_aggregate_download = NA_character_,
  benchmark_dynamic_indicator = NA_character_,
  benchmark_dynamic_family_aggregate = NA_character_,
  rank_id = NA_real_,
  etl_source = "manual"
)

db_variables <- addnew_db_variables(db_variables, new_entries)
}
